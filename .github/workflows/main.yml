name: CI

on: [push]

jobs:
  build:
    
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@main
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: Build
        run: dotnet build -c Release
          
  publish:

    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/v') # works only version tagged
    needs: [build]

    steps:
      - uses: actions/checkout@main
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: Build
        run: |
          $version = "${{ github.ref }}"
          $version = $version.Substring(10)
          echo "::set-env name=RELEASE_TAG::$version"
          dotnet publish -c Release -r win-x86 -o ./publish/win/x86 -p:ReleaseTag=$version
          dotnet publish -c Release -r win-x64 -o ./publish/win/x64 -p:ReleaseTag=$version
          Compress-Archive -Path ./publish/win -DestinationPath ./publish/win.zip -CompressionLevel Optimal
          dotnet publish -c Release -o ./publish/any -p:ReleaseTag=$version
          Compress-Archive -Path ./publish/any -DestinationPath ./publish/any.zip -CompressionLevel Optimal
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset (win)
        id: upload-release-asset-win
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/win.zip
          asset_name: CSharpScriptRunner-${{ env.RELEASE_TAG }}-win.zip
          asset_content_type: application/zip
      - name: Upload Release Asset (any)
        id: upload-release-asset-any
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/any.zip
          asset_name: CSharpScriptRunner-${{ env.RELEASE_TAG }}-any.zip
          asset_content_type: application/zip
